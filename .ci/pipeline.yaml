resources:
- name: flake-source
  type: git
  icon: github
  source:
    uri: https://github.com/scottbot95/nixos-config
    branch: nixosUnstable

jobs:
- name: update-pipeline
  plan:
  - get: flake-source
    trigger: true
  - task: decrypt-secrets
    file: flake-source/.ci/tasks/decrypt-sops.yaml
    input_mapping:
      source: flake-source
    vars:
      age_key: ((age_key))
      secret_file: concourse.yaml
  - set_pipeline: self
    file: flake-source/.ci/pipeline.yaml
    var_files:
    - secrets/concourse.yaml
    
- name: deploy-network
  plan:
  - get: flake-source
    passed:
      - update-pipeline
    trigger: true
  - in_parallel:
      fail_fast: true
      steps:
      - task: build-image
        privileged: true
        file: flake-source/.ci/tasks/build-nix.yaml
        input_mapping: 
          source: flake-source
      - task: decrypt-secrets
        file: flake-source/.ci/tasks/decrypt-sops.yaml
        input_mapping:
          source: flake-source
        vars:
          age_key: ((age_key))
          secret_file: proxmox.json
  - task: deploy
    image: image
    file: flake-source/.ci/tasks/run-nix.yaml
    params:
      CACHIX_AUTH_TOKEN: ((cachix_token))
      HERCULES_CI_API_TOKEN: ((hci_token))
      SOPS_AGE_KEY: ((age_key))
    vars:
      cachix_token: ((cachix_token))
      hci_token: ((hci_token))
      age_key: ((age_key)))
      command: nixops
      args: deploy --include proxy faultybox
    input_mapping:
      source: flake-source

  # - task: build-bob
  #   image: image
  #   config:
  #     platform: linux
  #     params:
  #       CACHIX_AUTH_TOKEN: ((cachix_token))
  #       HERCULES_CI_API_TOKEN: ((hci_token))
  #     inputs:
  #     - name: flake-source
  #     run:
  #       path: sh
  #       args:
  #       - -exc
  #       - |
  #         cd flake-source
  #         cachix watch-exec $CACHIX_NAME nix-shell -- --run "nixops deploy --include ((machines)) --build-only"

  # - task: build-bob
  #   config:
  #     platform: linux
  #     image_resource:
  #       type: registry-image
  #       source: { repository: "nixos/nix" }
  #     inputs:
  #     - name: flake-source
  #       path: .
  #     params:
  #       CACHIX_NAME: scottbot95-homelab
  #       CACHIX_AUTH_TOKEN: ((cachix_token))
  #       NIX_CONFIG: |
  #         extra-experimental-features = nix-command flakes
  #         max-jobs = 4
  #         cores = 4
  #       HERCULES_CI_API_TOKEN: ((hci_token))
  #     # caches:
  #     # - path: nix-store
  #     run:
  #       path: sh
  #       args:
  #       - -exc
  #       - |
  #         # mkdir -p ./nix-store
  #         # nix-store --export $(nix-store -qR $(ls -d /nix/store/*)) > out
  #         # echo "store = $PWD/nix-store" >> /etc/nix/nix.conf
  #         # nix-store --import < out
  #         # cat /etc/nix/nix.conf
  #         nix-channel --update
  #         nix-env -iA nixpkgs.cachix nixpkgs.bash
  #         cachix use $CACHIX_NAME
  #         cachix watch-exec $CACHIX_NAME nix-shell -- --run "nixops deploy --include ((machines)) --build-only"
